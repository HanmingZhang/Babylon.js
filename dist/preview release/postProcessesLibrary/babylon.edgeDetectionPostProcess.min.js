var __extends=this&&this.__extends||(function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])};return function(n,t){function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}})(),BABYLON;!(function(e){var n=(function(n){function t(t,o,r){var i=n.call(this,t,"sobeledgedetection",["width","height","edgeThickness"],null,{width:o.getEngine().getRenderWidth(),height:o.getEngine().getRenderHeight()},o,e.Texture.TRILINEAR_SAMPLINGMODE,o.getEngine(),!0)||this;return i._edgeThickness=0,i._minEdgeThickness=.5,i._maxEdgeThickness=4,console.log("input thickness",r),i._edgeThickness=Math.min(Math.max(r,i._minEdgeThickness),i._maxEdgeThickness),i.onApply=function(e){e.setFloat("width",i.width),e.setFloat("height",i.height),e.setFloat("edgeThickness",i._edgeThickness)},i}return __extends(t,n),t})(e.PostProcess);e.EdgeDetectionPostProcess=n})(BABYLON||(BABYLON={})),BABYLON.Effect.ShadersStore.sobeledgedetectionPixelShader="\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform float width;\nuniform float height;\nuniform float edgeThickness;\nvoid make_kernel(inout vec4 n[9],sampler2D tex,vec2 coord)\n{\nfloat w=edgeThickness/width;\nfloat h=edgeThickness/height;\nn[0]=texture2D(tex,coord+vec2( -w,-h));\nn[1]=texture2D(tex,coord+vec2(0.0,-h));\nn[2]=texture2D(tex,coord+vec2( w,-h));\nn[3]=texture2D(tex,coord+vec2( -w,0.0));\nn[4]=texture2D(tex,coord);\nn[5]=texture2D(tex,coord+vec2( w,0.0));\nn[6]=texture2D(tex,coord+vec2( -w,h));\nn[7]=texture2D(tex,coord+vec2(0.0,h));\nn[8]=texture2D(tex,coord+vec2( w,h));\n}\nvoid main(void) \n{\nvec4 n[9];\nmake_kernel( n,textureSampler,vUV );\nvec4 sobel_edge_h=n[2]+(2.0*n[5])+n[8]-(n[0]+(2.0*n[3])+n[6]);\nvec4 sobel_edge_v=n[0]+(2.0*n[1])+n[2]-(n[6]+(2.0*n[7])+n[8]);\nvec4 sobel=sqrt((sobel_edge_h*sobel_edge_h)+(sobel_edge_v*sobel_edge_v));\ngl_FragColor=vec4( 1.0-sobel.rgb,1.0 );\n}\n",BABYLON.Effect.ShadersStore.composePixelShader="\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\n\nuniform sampler2D sceneSampler;\nvoid main(void) \n{\n\ngl_FragColor=texture2D(textureSampler,vUV)*texture2D(sceneSampler,vUV);\n}";